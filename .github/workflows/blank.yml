name: "JFrog-GitHub NPM Publish OIDC Integration"
on: push

# This is required as per
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-cloud-providers#adding-permissions-settings
permissions:
  id-token: write

jobs:
  build:
     runs-on: ubuntu-latest
     env:
      OIDC_AUDIENCE: 'grpapi'
      OIDC_PROVIDER: 'manu-grpapi'
      PLATFORM_REPO: 'manu-npm-virtual'
     steps:
       - name: Setup JFrog cli / handshake via OIDC, with user
         uses: jfrog/setup-jfrog-cli@v4
         env:  
           JF_URL: https://hts2.jfrog.io
         with:
           oidc-provider-name: ${{ env.OIDC_PROVIDER }}
           oidc-audience: ${{ env.OIDC_AUDIENCE }}
       - name: Print env
         run: printenv

       - name: Ping Artifactory
         run: jf rt ping       
           
       - name: Get npm auth token
         run: jf rt curl /artifactory/api/npm/auth > auth
           
       - name: Create .npmrc file
         run: |
          echo "loglevel=http" > .npmrc
          echo "fund=false" >> .npmrc
          echo "@mtg:registry=https://hts2.jfrog.io/artifactory/api/npm/manu-npm-virtual/" >> .npmrc
          echo "//hts2.jfrog.io/artifactory/api/npm/manu-npm-virtual/:_password=QVBCN0xkNmNyaXhVY1NqN0prTVg0cEtoeURF" >> .npmrc
          echo "//hts2.jfrog.io/artifactory/api/npm/manu-npm-virtual/:username=manu" >> .npmrc
          echo "//hts2.jfrog.io/artifactory/api/npm/manu-npm-virtual/:email=manuchandran@test.com" >> .npmrc
          echo "//hts2.jfrog.io/artifactory/api/npm/manu-npm-virtual/:always-auth=true" >> .npmrc
          cat auth | sed "s/^_auth\(.*\)$/\/\/hts2.jfrog.io\/:_auth\1/"  | sed 's/ //g' >> .npmrc    
       - name: npm install
         run: npm install grunt --loglevel verbose
       - name: Get id token
         run: |
                    ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
                    "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=grpapi" | jq .value | tr -d '"')
                    echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
                    echo "$ID_TOKEN"
       - name: Exchange token with access
         env:
                    ID_TOKEN: ${{env.ID_TOKEN}}
                    JFROG_PLATFORM_URL: https://hts2.jfrog.io
         run: |
                    ACCESS_TOKEN=$(curl -XPOST -H "Content-Type: application/json" "https://hts2.jfrog.io/access/api/v1/oidc/token" -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${ID_TOKEN}\", \"provider_name\": \"manu-grpapi\"}" | jq .access_token | tr -d '"')
                    echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV  
       - name: "Append to .npmrc file to allow publish of version-bumped @viaplay scoped package to manu-npm-virtual"
         env:
                 OIDC_AUDIENCE: 'grpapi'
                 OIDC_PROVIDER: 'manu-grpapi'
         run: |
          HTTP_RESPONSE_CODE=$(curl -s -o response.json -w "%{http_code}" -X POST -H "Content-type: application/json" https://hts2.jfrog.io/access/api/v1/oidc/token -d \
                    '{"grant_type": "urn:ietf:params:oauth:grant-type:token-exchange","subject_token_type":"urn:ietf:params:oauth:token-type:id_token","subject_token": "${{ env.ID_TOKEN }}","provider_name": "${{ env.OIDC_PROVIDER }}"}')
          if [ $HTTP_RESPONSE_CODE == "200" ]; then
            cat "response.json" >> .npmrc 
          else
            echo "HTTP ERROR: ${HTTP_RESPONSE_CODE}" 
            echo "::error Artifactory authentication failed"
            exit 1
           fi  
       - name: "Test npm publish of scoped package"
         run: |
          #Create a new version of @viaplay/cicd-npm-publish-tester, copy forward, bump version and publish it!
          mkdir -p app
          cp node_modules/@viaplay/cicd-npm-publish-tester/package.json app/package.json
          cp node_modules/@viaplay/cicd-npm-publish-tester/index.js app/index.js
          cd app
          npm version patch
          npm publish
          cd ..   
